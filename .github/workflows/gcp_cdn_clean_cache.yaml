name: Clean Cache GCP CDN
on:
  workflow_call:
    inputs:
      gcp_project:
        default: ''
        required: true
        type: string
      gcp_cdn_lb:
        default: ''
        required: true
        type: string
    secrets:
      gcp_cdn_cache_invalidate:
        required: false
env:
  GCP_PROJECT: ${{ inputs.gcp_project }}
  GCP_CDN_LB: ${{ inputs.gcp_cdn_lb }}
jobs:
  job:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Configure GCP Credentials
        run: |
          # IMPORTANT: SECRET MUST BE IN BASE64
          touch gcp_cdn_cache_invalidate.json
          echo "${{ secrets.gcp_cdn_cache_invalidate }}" | base64 -d > gcp_cdn_cache_invalidate.json

          client_email=$(cat gcp_cdn_cache_invalidate.json | jq .client_email  -r)
          project_id=$(cat gcp_cdn_cache_invalidate.json | jq .project_id  -r)

          echo "[INFO] Get access to Gcloud ${project_id}"

          gcloud auth activate-service-account "${client_email}" \
            --key-file=gcp_cdn_cache_invalidate.json \
            --project="${project_id}"

          echo "[INFO] Use project $(gcloud config list --format=json | jq .core.project -r)"



      - name: Clean cache GCP CDN
        run: |
          echo "[INFO] Invalidate cache CDN GCP"
          gcloud compute url-maps invalidate-cdn-cache \
            "cdn" \
            --host "${GCP_CDN_LB}" \
            --path "/*" \
            --project "${GCP_PROJECT}"
