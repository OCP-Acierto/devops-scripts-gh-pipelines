name: e2e Automation
on:
  workflow_call:
    inputs:
      project_code:
        required: true
        type: string
      deploy_env:
        required: true
        type: string
      docker_file:
        default: 'Dockerfile'
        required: true
        type: string
      run_command:
        default: ''
        required: true
        type: string
    secrets:
      aws_access_key_id_prod:
        required: true
      aws_secret_access_key_prod:
        required: true
      gh_pull_repo_pat:
        required: true
env:
  PROJECT_CODE: ${{ inputs.project_code }}
  DEPLOY_ENV: ${{ inputs.deploy_env }}
  DOCKER_FILE: ${{ inputs.docker_file }}
  RUN_COMMAND: ${{ inputs.run_command }}
permissions:
      id-token: write
      contents: write
jobs:
  job:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout config-management repo
        uses: actions/checkout@v3
        with:
          repository: OCP-Acierto/shared-config-management
          token: ${{ secrets.gh_pull_repo_pat }}
          path: config

      - name: Configure AWS Credentials PROD
        uses:  aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id_prod }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key_prod }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR PROD
        uses: aws-actions/amazon-ecr-login@v1

      - name: Execute e2e automation
        run: |
          # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md
          
          export $(grep -v '^#' ./config/${DEPLOY_ENV}/${PROJECT_CODE}/.env | xargs)

          npm ci
          npm run ${RUN_COMMAND}
