name: Sonar Scanner
on:
  workflow_call:
    inputs:
      project_code:
        required: true
        type: string
      gcp_registry:
        default: 'eu.gcr.io/internal-cdm/images'
        required: true
        type: string
      gcp_repository:
        required: true
        type: string
      docker_file:
        default: 'Dockerfile'
        required: true
        type: string
      docker_build_args:
        default: ''
        required: false
        type: string
      sonar_exclusions:
        default: ''
        required: false
        type: string
      sonar_coverage_exclusions:
        default: ''
        required: false
        type: string
    secrets:
      gcp_cdm_registry_sa_credentials:
        required: true
      sonar_token:
        required: true
      sonar_url:
        required: true
env:
  GCP_REGISTRY: ${{ inputs.gcp_registry }}
  GCP_REPOSITORY: ${{ inputs.gcp_repository }}
  PROJECT_CODE: ${{ inputs.project_code }}
  SONAR_URL: ${{ secrets.sonar_url }}
  SONAR_TOKEN: ${{ secrets.sonar_token }}
  SONAR_EXCLUSIONS: ${{ inputs.sonar_exclusions }}
  SONAR_COVERAGE_EXCLUSIONS: ${{ inputs.sonar_coverage_exclusions }}
jobs:
  job:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure GCP Credentials
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.gcp_cdm_registry_sa_credentials }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: internal-cdm

      - name: Configure Docker Credentials
        run: |
          gcloud auth configure-docker --quiet

      - name: Sonar Scanner Execution
        run: |
          docker run --rm --workdir "/app" \
              -v "$(pwd)/:/app/" \
              -v "$(pwd)/jreport:/opt/jreport" \
              -v "$(pwd)/coverage:/opt/coverage" \
              "${GCP_REGISTRY}/${GCP_REPOSITORY}:latest" \
              /bin/bash -e -c "ls && /usr/bin/sonar-scanner \
                      -Dsonar.projectKey=${PROJECT_CODE} \
                      -Dsonar.sources=. \
                      -Dsonar.host.url=${SONAR_URL} \
                      -Dsonar.login=${SONAR_TOKEN} \
                      -Dsonar.sourceEncoding=UTF-8 \
                      -Dsonar.coverage.exclusions=**/*spec.ts,**/**/*spec.ts,**/index.ts,**/*mock.ts,**/__mocks__/*,${SONAR_COVERAGE_EXCLUSIONS} \
                      -Dsonar.exclusions=public/**,${SONAR_EXCLUSIONS} \
                      -Dsonar.javascript.lcov.reportPaths=.coverage/lcov.info,.coverage/clover.xml
                  "
                  

