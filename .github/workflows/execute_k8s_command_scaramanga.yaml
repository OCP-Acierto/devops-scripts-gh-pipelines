name: Deploy to K8s
on:
  workflow_call:
    inputs:
      project_code:
        required: true
        type: string
      eks_cluster_name:
        required: true
        type: string
      eks_cluster_zone:
        default: eu-west-1
        required: true
        type: string
      pod_command:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
env:
  PROJECT_CODE: ${{ inputs.project_code }}
  EKS_CLUSTER_NAME: ${{ inputs.eks_cluster_name }}
  EKS_CLUSTER_ZONE: ${{ inputs.eks_cluster_zone }}
  POD_COMMAND: ${{ inputs.pod_command }}
  KUBECTL_VERSION: v1.23.6
jobs:
  job:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Install Kubectl ${{ env.KUBECTL_VERSION }}
        run: |
          sudo rm -fv  /usr/local/bin/kubectl
          curl -sLO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          sudo chmod +x kubectl
          sudo mv -v kubectl /usr/local/bin/kubectl
          kubectl version --output json | jq '.clientVersion.gitVersion'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Configure EKS Credentials
        run: |
          aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME}
          kubectl version --output json | jq '.serverVersion.gitVersion'

      - name: Execute Command to Pod
        run: |
          echo "[INFO] Getting Pod"
          POD_NAME=$(kubectl get pods --no-headers -o custom-columns=":metadata.name" | grep -i ${PROJECT_CODE} | tail -n1)

          echo "[INFO] Execute ${POD_COMMAND} on Pod ${POD_NAME}"
          kubectl exec -ti ${POD_NAME} -- bash -c "${POD_COMMAND}"
