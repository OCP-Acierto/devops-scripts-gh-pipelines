name: PHPUnit Test
on:
  workflow_call:
    inputs:
      image_tag:
        default: 'latest'
        required: true
        type: string
      gcp_registry:
        default: 'eu.gcr.io/internal-cdm/builds'
        required: true
        type: string
      gcp_repository:
        required: true
        type: string
      phpunit_redis:
        default: ''
        required: false
        type: string
      phpunit_mongodb:
        default: ''
        required: false
        type: string
      phpunit_config_path:
        default: ''
        required: false
        type: string
    secrets:
      gh_pull_repo_pat:
        required: true
      gcp_cdm_registry_sa_credentials:
        required: true
env:
  IMAGE_TAG: ${{ inputs.image_tag }}
  GCP_REGISTRY: ${{ inputs.gcp_registry }}
  GCP_REPOSITORY: ${{ inputs.gcp_repository }}
  PHPUNIT_REDIS: ${{ inputs.phpunit_redis }}
  PHPUNIT_MONGODB: ${{ inputs.phpunit_mongodb }}
  PHPUNIT_CONFIG_PATH: ${{ inputs.phpunit_config_path }}
jobs:
  job:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout config-management repo
        uses: actions/checkout@v2
        with:
          repository: OCP-Acierto/shared-config-management
          token: ${{ secrets.GH_PULL_REPO_PAT }}
          path: config-management

      - name: Configure GCP Credentials
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.gcp_cdm_registry_sa_credentials }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: internal-cdm

      - name: Configure Docker Credentials
        run: |
          gcloud auth configure-docker --quiet

      - name: PHPUnit Execution
        run: |
          docker network create --driver bridge phpunit-test

          if [ ! -z "${PHPUNIT_MONGODB}" ]; then
            docker run -tid --rm --name mongodb --network phpunit-test \
              -e MONGO_INITDB_ROOT_USERNAME=mongoadmin \
              -e MONGO_INITDB_ROOT_PASSWORD=secret  \
              ${PHPUNIT_MONGODB}
          fi
        
          if [ ! -z "${PHPUNIT_REDIS}" ]; then
            docker run -tid --rm --name redis --network phpunit-test \
            ${PHPUNIT_REDIS}
          fi

          docker run -t --rm --workdir /app --network phpunit-test \
              -v "$(pwd)/jreport:/opt/jreport" \
              -v "$(pwd)/clover:/opt/clover" \
              -v "$(pwd)/config-management:/config-management" \
              "${GCP_REGISTRY}/${GCP_REPOSITORY}:${IMAGE_TAG}" \
              /bin/bash -e -c "echo Install PHP testing tools && \
              apt-get update && apt-get -qq install -y php7.3-xdebug && \
              echo Download /config-management/${PHPUNIT_CONFIG_PATH} && \
              cat /config-management/${PHPUNIT_CONFIG_PATH} > /app/.env.testing && \
              XDEBUG_MODE=coverage /app/vendor/bin/phpunit \
                      --configuration /app/phpunit.xml \
                      --log-junit /opt/jreport/jreport.xml \
                      --coverage-clover /opt/clover/clover.xml \
                      --coverage-text
                  "
