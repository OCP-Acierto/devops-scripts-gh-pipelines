name: Deploy to K8s
on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
      project_code:
        required: true
        type: string
      ecr_repository:
        required: false
        type: string
      deploy_env:
        required: true
        type: string
      eks_cluster_name:
        required: true
        type: string
      eks_cluster_zone:
        default: eu-west-1
        required: true
        type: string
      account_id:
        default: ''
        required: false
        type: string
    secrets:
      gh_pull_repo_pat:
        required: true
env:
  IMAGE_TAG: ${{ inputs.image_tag }}
  PROJECT_CODE: ${{ inputs.project_code }}
  ECR_REPOSITORY: ${{ inputs.ecr_repository }}
  DEPLOY_ENV: ${{ inputs.deploy_env }}
  EKS_CLUSTER_NAME: ${{ inputs.eks_cluster_name }}
  EKS_CLUSTER_ZONE: ${{ inputs.eks_cluster_zone }}
  KUBECTL_VERSION: v1.25.5
  ACCOUNT_ID: ${{ inputs.account_id }}
permissions:
      id-token: write
      contents: write
jobs:
  job:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kubernetes repo
        uses: actions/checkout@v4
        with:
          repository: OCP-Acierto/devops-scripts-k8s
          token: ${{ secrets.gh_pull_repo_pat }}
          path: k8s

      - name: Checkout kubernetes repo
        uses: actions/checkout@v4
        with:
          repository: OCP-Acierto/ocp-config-management
          token: ${{ secrets.gh_pull_repo_pat }}
          path: config

      - name: Install Kubectl ${{ env.KUBECTL_VERSION }}
        run: |
          sudo rm -fv  /usr/local/bin/kubectl
          curl -sLO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          sudo chmod +x kubectl
          sudo mv -v kubectl /usr/local/bin/kubectl
          kubectl version --output json | jq '.clientVersion.gitVersion'

      - name: Configure AWS credentials via role assumption
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_ID }}:role/gha_oidc_assume_role"
          role-session-name: GithubActions
          aws-region: eu-west-1

      - name: Configure EKS Credentials
        run: |
          aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME}
          kubectl version --output json | jq '.serverVersion.gitVersion'

      - name: Check that Docker image is pushed to ECR Registry
        run: |
          if [ "${ECR_REPOSITORY}" != "" ]; then
            REPOSITORY_NAME=${ECR_REPOSITORY}
          else
            REPOSITORY_NAME=${PROJECT_CODE}
          fi

          echo "[INFO] Search Image in repository ${REPOSITORY_NAME}"
          if [ "$(aws ecr list-images --repository-name "${REPOSITORY_NAME}" | grep "${IMAGE_TAG}" -c)" -ge 1 ]; then
            echo "[INFO] Docker Image with tag ${IMAGE_TAG} exist!, continue deployment";
          else
            echo "[ERROR] Docker Image with tag ${IMAGE_TAG} doesn't exist!, exit deployment";
            exit 1
          fi

      - name: Execute job
        run: |
          K8S_PATH="./k8s/scaramanga/${DEPLOY_ENV}/projects/${PROJECT_CODE}"
          TIMEOUT=360s
          JOB_NAME="${PROJECT_CODE}-$(date +%s)"

          kubectl create job "${JOB_NAME}" --from="cronjob/${PROJECT_CODE}"

          echo "[INFO] Getting Deployment Status"
          kubectl get pods | grep -i "${JOB_NAME}"

          echo "[INFO] Getting Deployment Events"
          kubectl get events | grep -i "${JOB_NAME}" | tail -n10 || true
