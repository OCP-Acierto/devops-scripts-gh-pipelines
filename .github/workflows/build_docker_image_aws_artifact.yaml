name: Build Docker Image
on:
  workflow_call:
    inputs:
      image_tag:
        default: 'latest'
        required: true
        type: string
      aws_registry_prod:
        default: ''
        required: true
        type: string
      aws_registry_non_prod:
        default: ''
        required: true
        type: string
      aws_repository:
        required: true
        type: string
      docker_file:
        default: 'Dockerfile'
        required: true
        type: string
      docker_build_args:
        default: ''
        required: false
        type: string
    secrets:
      aws_access_key_id_non_prod:
        required: true
      aws_secret_access_key_non_prod:
        required: false
      aws_access_key_id_prod:
        required: true
      aws_secret_access_key_prod:
        required: false
      gh_npm_registry_pat:
        required: false
      codeartifact_auth_token:
        required: false
env:
  IMAGE_TAG: ${{ inputs.image_tag }}
  AWS_REGISTRY_PROD: ${{ inputs.aws_registry_prod }}
  AWS_REGISTRY_NON_PROD: ${{ inputs.aws_registry_non_prod }}
  AWS_REPOSITORY: ${{ inputs.aws_repository }}
  DOCKER_FILE: ${{ inputs.docker_file }}
  DOCKER_BUILD_ARGS: ${{ inputs.docker_build_args }}
jobs:
  job:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.OCP_PACKAGES_ACTIONS_ROLE }}
          role-session-name: githubactions
          aws-region: eu-west-1
      
      - name: Authenticate to CodeArtifact
        run: |
          export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain bauer-ocp-packages-domain --duration-seconds 0 --query authorizationToken --output text`
          npm config set '//bauer-ocp-packages-domain-803823522332.d.codeartifact.eu-west-1.amazonaws.com/npm/bauer-ocp-packages-repo/:_authToken' '${CODEARTIFACT_AUTH_TOKEN}'
          npm config set '//bauer-ocp-packages-domain-803823522332.d.codeartifact.eu-west-1.amazonaws.com/npm/bauer-ocp-packages-repo/:always-auth' 'true'
          echo "::add-mask::$CODEARTIFACT_AUTH_TOKEN"
          echo "CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN" >> $GITHUB_ENV
      
      - name: Get token
        run: |
          echo "::add-mask::$CODEARTIFACT_AUTH_TOKEN"
